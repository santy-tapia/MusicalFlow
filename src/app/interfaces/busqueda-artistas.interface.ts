
// Generated by https://quicktype.io

export interface ResultadoBusqueda {
  artists: Artists;
  tracks:  Tracks;
  albums:  Albums;
}
export interface Albums {
  href:     string;
  items:    Album[];
  limit:    number;
  next:     string;
  offset:   number;
  previous: null;
  total:    number;
}
export interface Tracks{
  href:     string;
  limit:    number;
  next:     string;
  offset:   number;
  previous: null;
  total:    number;
  items:    Track[];
}
export interface Artists {
  href:     string;
  limit:    number;
  next:     string;
  offset:   number;
  previous: null;
  total:    number;
  items:    ArtistaBusqueda[];
}

export interface ArtistaBusqueda {
  external_urls: ExternalUrls;
  followers:     Followers;
  genres:        string[];
  href:          string;
  id:            string;
  images:        Image[];
  name:          string;
  popularity:    number;
  type:          Type;
  uri:           string;
}

export interface ExternalUrls {
  spotify: string;
}

export interface Followers {
  href:  null;
  total: number;
}

export interface Image {

  height: number;
  width:  number;
   url:    string;
}

export enum Type {
  Artist = "artist",
}

export interface Track {
  album: Album;
  artists: Artists[];
  available_markets: string[];
  disc_number: number;
  duration_ms: number;
  explicit: boolean;
  external_urls: ExternalUrls;
  href: URL;
  id: string;
  name: string;
  popularity: number;
  preview_url: URL;
  track_number: number;
  type: string;
  uri: string;
}

export interface Album{
  album_type:             string;
  artists:                Artists[];
  external_urls:          ExternalUrls;
  href:                   string;
  id:                     string;
  images:                 Image[];
  is_playable:            boolean;
  name:                   string;
  release_date:           string;
  release_date_precision: string;
  total_tracks:           number;
  tracks:                 Track[];
  type:                   string;
  uri:                    string;
}


export interface TrackResult {
  tracks: Track[];
}
